type Query {
    publishedPosts: [Post!]!
    post(postId: ID!): Post
    postsByUser(userId: ID!): [Post!]!
    isAuthenticated:AuthenticatedToken
    canReadposts:String
    allUsers: [User]
    allPosts: [Post!]!
}

type Mutation {
    createUser(email: String!, hashed: String!): User
    createDraft(title: String!, userId: ID!, content: String, imgUrl: String): Post
    deleteThePost(postId: ID!): Post
    publish(postId: ID! published: Boolean!): Post
    loginUser(email: String!, hashed: String!):AuthenticatedToken
    updateAPost(postId: ID!, title: String, content: String, imgUrl: String): Post
}

type User {
    id: ID!
    email: String
    posts: [Post!]!
    hashed: String
}

type Post {
    id: ID!
    title: String!
    published: Boolean!
    author: User
    content: String
    imgUrl: String
}

type AuthenticatedToken {
    token: String
}